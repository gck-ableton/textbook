;;; Copyright (c) 2015 Gregor Klinke
;;; All rights reserved.

(define (get-line-length nd)
  (let loop ((c (children nd))
             (maxlen 0))
    (if (node-list-empty? c)
        maxlen
        (let* ((lines (string-split (data (node-list-first nd)) #\newline))
               (ml (string-length (reduce (lambda (a b)
                                            (if (> (string-length a)
                                                   (string-length b))
                                                a b))
                                          0
                                          lines))))pen
          (loop (node-list-rest c)
                (if (> ml maxlen) ml maxlen))) )))

(define (example-start-indent nd)
  (if (> (get-line-length nd) 60) -25mm 0pt))

(mode verbatim-mode
  (element p
    (make paragraph
      space-before: 0pt
      space-after:  0pt
      start-indent: (example-start-indent (parent (current-node)))
      font-name:    %monospace-font-name%
      font-size:    (font-size 2)
      line-spacing: (line-spacing 2)
      lines:        'asis
      whitespace-treatment: 'preserve
      (process-children)))
  )

(element example
  (make display-group
    space-before: (display-space 7pt conditional?: #t)
    space-after:  (display-space 7pt conditional?: #t)
    background-color: %example-background-color%
    color: %example-text-color%
    (sosofo-append
     (with-mode verbatim-mode
       (process-children)))))

(element verbatim
  (make display-group
    space-before: (display-space 7pt conditional?: #t)
    space-after:  (display-space 7pt conditional?: #t)
    (with-mode verbatim-mode
      (process-children))))
